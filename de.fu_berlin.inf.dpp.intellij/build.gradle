
dependencies {
  compile project(':de.fu_berlin.inf.dpp.core')
  compile project(path: ':de.fu_berlin.inf.dpp.ui', configuration: 'testing')
  compile project(':de.fu_berlin.inf.dpp.ui')

  compile fileTree(dir: intellijLibDir).matching {
    include '**/*.jar'
    exclude 'junit*.jar', 'picocontainer.jar', 'ant/**/*.jar'
  }

  compile 'org.easytesting:fest-assert:1.2'
  compile 'org.easytesting:fest-reflect:1.2'
  compile 'org.easytesting:fest-swing:1.2.1'
  compile 'org.easytesting:fest-util:1.1.3'

  testCompile project(path: ':de.fu_berlin.inf.dpp.core', configuration: 'testing')
  testCompile configurations.testConfig
}

test {
  exclude '**/Abstract*'
  exclude '**/*TestSuite*'
}

jar {
  manifest {
    instruction 'Created-By', 'IntelliJ IDEA'
    instruction 'Manifest-Version', '1.0'
  }
  version = null

  from sourceSets.main.output
}

task releaseZip(type: Zip, dependsOn: jar) {
  into ("${project.name}/lib") {
    from jar
    from project(':de.fu_berlin.inf.dpp.ui').jar
    from project(':de.fu_berlin.inf.dpp.core').jar

    from project(':de.fu_berlin.inf.dpp.ui').configurations.getByName('releaseDep')
    from project(':de.fu_berlin.inf.dpp.core').configurations.getByName('releaseDep')
  }
}

